<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This file contains definitions of common targets for ivy
-->
<project name="jmq-ivy" xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>This file contains definitions of common targets for ivy</description>
    
    <target name="-init-ivy-props">
        <fail unless="workspace.root.dir">Must set workspace.root</fail> 
        <fail message="${workspace.root.dir}/ant-ivy.properties doesn't exist, check workspace.root.dir property">
            <condition>
                <not><available file="${workspace.root.dir}/common/ant-ivy.properties"/></not>
            </condition>
        </fail>
        <property file="${workspace.root.dir}/common/ant-ivy.properties"/>
        <fail unless="ant.lib.dir">Must set ant.lib.dir</fail>
        <fail unless="ivy.version">Must set ivy.version</fail>
        <fail unless="ivy.jar.file">Must set ivy.jar.file</fail>
    </target>

    <target name="-download-ivy" depends="-init-ivy-props">
        <mkdir dir="${ant.lib.dir}"/>
        <!-- download Ivy from web so that it can be used without installation -->
        <echo message="installing ivy..."/>
        <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true" ignoreerrors="true"/>
        <available file="${ivy.jar.file}" property="ivy.exists"/>
        <fail unless="ivy.exists" message="Ivy ${ivy.version} not exists"/>
    </target>

    <target name="-load-ivy" depends="-download-ivy">
        <path id="ant.lib.path">
            <fileset dir="${ant.lib.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ant.lib.path"/>
    </target>

    <target name="-init-ivy-settings" depends="-load-ivy">
        <ivy:settings id="ariadn" file="${workspace.root.dir}/common/ivysettings.xml">
        </ivy:settings>
    </target>

    <target name="-ivy-resolve" depends="-init-ivy-settings">
        <ivy:resolve settingsRef="ariadn"/>
        <touch file="${build.dir}/ivy_resolve_ts.temp"/>
    </target>
    
    <target name="-check-ivy-ts">
        <uptodate property="ivy-cache.uptodate" targetfile="${build.dir}/ivy_resolve_ts.temp">
             <srcfiles file="${basedir}/ivy.xml"/>
        </uptodate>
    </target>

    <target name="resolve-deps" depends="-check-ivy-ts" unless="ivy-cache.uptodate">
        <antcall target="-ivy-resolve"/>
    </target>
    <target name="ivy-retrieve" depends="-check-ivy-ts" unless="ivy-cache.uptodate">
        <antcall target="-ivy-resolve"/>
    </target>
</project>
